package sidhu.graph;
import java.util.ArrayList;
import java.text.SimpleDateFormat;
import java.util.Calendar;

/**
 *
 * @author Prabh
 */
public class UserInterface extends javax.swing.JFrame {
    
    ArrayList<Customer> customerList = FileRead.readCustomers("hello");
    ArrayList<Appointment> appointmentList = FileRead.readAppointments("hello");
    CustomerRecords customerRecords = new CustomerRecords(customerList);
    AppointmentRecords appointmentRecords = new AppointmentRecords(appointmentList);

    /**
     * Creates new form userInterface
     */
    public UserInterface() {
        initComponents();
        
        //set the current usable ID on the GUI
        customerIDOutput.setText(customerRecords.getMaxID() + "");
        
        //set the current usable ID on the GUI
        appointmentIDOutput.setText(appointmentRecords.getMaxID() + "");
        
        updateCustomerChooser();
        
        //set the date field in appointment records to today's date
        Calendar calendar = Calendar.getInstance();
        SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        String today = dateFormat.format(calendar.getTime());
        
        recordDateInput.setText(today);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        appointmentPanel = new javax.swing.JPanel();
        recordAppointmentLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        findAppointmentLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        findAppointmentOutput = new javax.swing.JTextArea();
        findLastNameLabel = new javax.swing.JLabel();
        findIDLabel = new javax.swing.JLabel();
        findTypeLabel = new javax.swing.JLabel();
        findDateLabel = new javax.swing.JLabel();
        findFirstNameLabel4 = new javax.swing.JLabel();
        findAppointmentID = new javax.swing.JTextField();
        findAppointmentCustomerID = new javax.swing.JTextField();
        findAppointmentRevenue = new javax.swing.JTextField();
        findAppointmentDate = new javax.swing.JTextField();
        customerChooser = new javax.swing.JComboBox<>();
        addFirstNameLabel = new javax.swing.JLabel();
        addLastNameLabel1 = new javax.swing.JLabel();
        findTypeChooser = new javax.swing.JComboBox<>();
        addLastNameLabel2 = new javax.swing.JLabel();
        recordTypeChooser = new javax.swing.JComboBox<>();
        addFirstNameLabel1 = new javax.swing.JLabel();
        appointmentIDOutput = new javax.swing.JLabel();
        recordRevenueInput = new javax.swing.JTextField();
        recordDateInput = new javax.swing.JTextField();
        finishRecordBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        addFirstNameLabel3 = new javax.swing.JLabel();
        findAppointmentBtn = new javax.swing.JButton();
        customerPanel = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        addCustomerLabel = new javax.swing.JLabel();
        addFirstName = new javax.swing.JLabel();
        addFirstName1 = new javax.swing.JLabel();
        addFirstName2 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        addFirstName3 = new javax.swing.JLabel();
        addFirstName4 = new javax.swing.JLabel();
        addCustomerFirstName = new javax.swing.JTextField();
        addCustomerPhone = new javax.swing.JTextField();
        addCustomerLastName = new javax.swing.JTextField();
        addCustomerEmail = new javax.swing.JTextField();
        customerIDOutput = new javax.swing.JLabel();
        addCustomerLabel1 = new javax.swing.JLabel();
        addFirstName5 = new javax.swing.JLabel();
        addFirstName6 = new javax.swing.JLabel();
        addFirstName7 = new javax.swing.JLabel();
        addFirstName8 = new javax.swing.JLabel();
        addFirstName9 = new javax.swing.JLabel();
        findCustomerFirstName = new javax.swing.JTextField();
        findCustomerPhone = new javax.swing.JTextField();
        findCustomerLastName = new javax.swing.JTextField();
        findCustomerID = new javax.swing.JTextField();
        findCustomerEmail = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        findCustomerOutput = new javax.swing.JTextArea();
        findCustomerBtn = new javax.swing.JButton();
        addCustomerBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        customerRecordsFilePathInput = new javax.swing.JTextField();
        setCustomerRecordsPathBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        AppointmentRecordsFilePathInput = new javax.swing.JTextField();
        setAppointmentRecordsFilePathBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        recordAppointmentLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        recordAppointmentLabel.setText("Record Appointment");

        findAppointmentLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        findAppointmentLabel.setText("Find Appointment");

        findAppointmentOutput.setColumns(20);
        findAppointmentOutput.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        findAppointmentOutput.setRows(5);
        jScrollPane1.setViewportView(findAppointmentOutput);

        findLastNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        findLastNameLabel.setText("Revenue");

        findIDLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        findIDLabel.setText("Appointment ID #");

        findTypeLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        findTypeLabel.setText("Appointment Type");

        findDateLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        findDateLabel.setText("Date");

        findFirstNameLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        findFirstNameLabel4.setText("Customer ID #");

        findAppointmentID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        findAppointmentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAppointmentIDActionPerformed(evt);
            }
        });

        findAppointmentCustomerID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        findAppointmentCustomerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAppointmentCustomerIDActionPerformed(evt);
            }
        });

        findAppointmentRevenue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        findAppointmentRevenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAppointmentRevenueActionPerformed(evt);
            }
        });

        findAppointmentDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        findAppointmentDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAppointmentDateActionPerformed(evt);
            }
        });

        customerChooser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        addFirstNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstNameLabel.setText("Customer*");

        addLastNameLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addLastNameLabel1.setText("Appointment Type*");

        findTypeChooser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        findTypeChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Haircut", "Eyebrows", "Laser", "Waxing" }));

        addLastNameLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addLastNameLabel2.setText("Revenue*");

        recordTypeChooser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        recordTypeChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Haircut", "Eyebrows", "Laser", "Waxing" }));

        addFirstNameLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstNameLabel1.setText("Date");

        appointmentIDOutput.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        appointmentIDOutput.setText("######");

        recordRevenueInput.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        recordRevenueInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordRevenueInputActionPerformed(evt);
            }
        });

        recordDateInput.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        recordDateInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordDateInputActionPerformed(evt);
            }
        });

        finishRecordBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        finishRecordBtn.setText("Add");
        finishRecordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishRecordBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("$");

        addFirstNameLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstNameLabel3.setText("Appointment ID #");

        findAppointmentBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        findAppointmentBtn.setText("Search");
        findAppointmentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAppointmentBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout appointmentPanelLayout = new javax.swing.GroupLayout(appointmentPanel);
        appointmentPanel.setLayout(appointmentPanelLayout);
        appointmentPanelLayout.setHorizontalGroup(
            appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appointmentPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(appointmentPanelLayout.createSequentialGroup()
                        .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(appointmentPanelLayout.createSequentialGroup()
                                .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(findIDLabel)
                                        .addComponent(findDateLabel)
                                        .addComponent(findTypeLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(findFirstNameLabel4)
                                    .addComponent(findLastNameLabel))
                                .addGap(62, 62, 62)
                                .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(findAppointmentRevenue)
                                    .addComponent(findAppointmentCustomerID)
                                    .addComponent(findAppointmentDate)
                                    .addComponent(findAppointmentID)
                                    .addComponent(findTypeChooser, 0, 188, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appointmentPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appointmentPanelLayout.createSequentialGroup()
                                        .addComponent(findAppointmentLabel)
                                        .addGap(546, 546, 546))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, appointmentPanelLayout.createSequentialGroup()
                                        .addComponent(findAppointmentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 1496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(recordAppointmentLabel)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(appointmentPanelLayout.createSequentialGroup()
                            .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(appointmentPanelLayout.createSequentialGroup()
                                    .addComponent(addLastNameLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(recordRevenueInput, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, appointmentPanelLayout.createSequentialGroup()
                                    .addComponent(addFirstNameLabel)
                                    .addGap(58, 58, 58)
                                    .addComponent(customerChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, appointmentPanelLayout.createSequentialGroup()
                                    .addComponent(addFirstNameLabel1)
                                    .addGap(106, 106, 106)
                                    .addComponent(recordDateInput)))
                            .addGap(215, 215, 215)
                            .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(appointmentPanelLayout.createSequentialGroup()
                                    .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(addLastNameLabel1)
                                        .addComponent(addFirstNameLabel3))
                                    .addGap(86, 86, 86)
                                    .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(appointmentIDOutput)
                                        .addComponent(recordTypeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(finishRecordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        appointmentPanelLayout.setVerticalGroup(
            appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appointmentPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recordAppointmentLabel)
                .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(appointmentPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addFirstNameLabel)
                            .addComponent(customerChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addLastNameLabel1)
                            .addComponent(recordTypeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(appointmentPanelLayout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addFirstNameLabel1)
                                    .addComponent(recordDateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(appointmentPanelLayout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(appointmentIDOutput)
                                    .addComponent(addFirstNameLabel3))))
                        .addGap(52, 52, 52)
                        .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addLastNameLabel2)
                            .addComponent(recordRevenueInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(finishRecordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(37, 37, 37)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(findAppointmentLabel)
                        .addGap(18, 18, 18)
                        .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(findIDLabel)
                            .addComponent(findAppointmentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(findTypeLabel)
                            .addComponent(findTypeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(findFirstNameLabel4)
                            .addComponent(findAppointmentCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(findLastNameLabel)
                            .addComponent(findAppointmentRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(appointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(findDateLabel)
                            .addComponent(findAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(findAppointmentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(appointmentPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35))
        );

        jTabbedPane1.addTab("Appointments", appointmentPanel);

        addCustomerLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        addCustomerLabel.setText("Find Customer");

        addFirstName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstName.setText("First Name");

        addFirstName1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstName1.setText("Last Name*");

        addFirstName2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstName2.setText("Phone Number");

        addFirstName3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstName3.setText("Email");

        addFirstName4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstName4.setText("Customer ID #");

        addCustomerFirstName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addCustomerFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerFirstNameActionPerformed(evt);
            }
        });

        addCustomerPhone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addCustomerPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerPhoneActionPerformed(evt);
            }
        });

        addCustomerLastName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addCustomerLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerLastNameActionPerformed(evt);
            }
        });

        addCustomerEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addCustomerEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerEmailActionPerformed(evt);
            }
        });

        customerIDOutput.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        customerIDOutput.setText("######");

        addCustomerLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        addCustomerLabel1.setText("Add Customer");

        addFirstName5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstName5.setText("Last Name");

        addFirstName6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstName6.setText("First Name*");

        addFirstName7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstName7.setText("Phone Number");

        addFirstName8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstName8.setText("Customer ID #");

        addFirstName9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addFirstName9.setText("Email");

        findCustomerFirstName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        findCustomerFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findCustomerFirstNameActionPerformed(evt);
            }
        });

        findCustomerPhone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        findCustomerPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findCustomerPhoneActionPerformed(evt);
            }
        });

        findCustomerLastName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        findCustomerLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findCustomerLastNameActionPerformed(evt);
            }
        });

        findCustomerID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        findCustomerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findCustomerIDActionPerformed(evt);
            }
        });

        findCustomerEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        findCustomerEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findCustomerEmailActionPerformed(evt);
            }
        });

        findCustomerOutput.setColumns(20);
        findCustomerOutput.setRows(5);
        jScrollPane2.setViewportView(findCustomerOutput);

        findCustomerBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        findCustomerBtn.setText("Search");
        findCustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findCustomerBtnActionPerformed(evt);
            }
        });

        addCustomerBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addCustomerBtn.setText("Add");
        addCustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout customerPanelLayout = new javax.swing.GroupLayout(customerPanel);
        customerPanel.setLayout(customerPanelLayout);
        customerPanelLayout.setHorizontalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerPanelLayout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addCustomerLabel1)
                    .addComponent(addCustomerLabel)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 1496, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addFirstName1)
                            .addComponent(addFirstName3)
                            .addComponent(addFirstName2)
                            .addComponent(addFirstName6)
                            .addComponent(addFirstName)
                            .addComponent(addFirstName5)
                            .addComponent(addFirstName7)
                            .addComponent(addFirstName9)
                            .addComponent(addFirstName8))
                        .addGap(41, 41, 41)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCustomerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(customerPanelLayout.createSequentialGroup()
                                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(findCustomerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(findCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(findCustomerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(findCustomerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(findCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(395, 395, 395))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, customerPanelLayout.createSequentialGroup()
                                        .addComponent(findCustomerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addCustomerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addCustomerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(208, 208, 208)
                                .addComponent(addFirstName4)
                                .addGap(63, 63, 63)
                                .addComponent(customerIDOutput)))))
                .addGap(23, 23, 23))
            .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(customerPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(customerPanelLayout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 1496, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(42, Short.MAX_VALUE)))
            .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(customerPanelLayout.createSequentialGroup()
                    .addGap(608, 608, 608)
                    .addComponent(addCustomerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(801, Short.MAX_VALUE)))
        );
        customerPanelLayout.setVerticalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(findCustomerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(customerPanelLayout.createSequentialGroup()
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addCustomerLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addFirstName4)
                            .addComponent(addCustomerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerIDOutput)
                            .addComponent(addFirstName6))
                        .addGap(32, 32, 32)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addFirstName1)
                            .addComponent(addCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addFirstName2)
                            .addComponent(addCustomerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addFirstName3)
                            .addComponent(addCustomerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79)
                        .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customerPanelLayout.createSequentialGroup()
                                .addComponent(addCustomerLabel)
                                .addGap(18, 18, 18)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addFirstName)
                                    .addComponent(findCustomerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addFirstName5)
                                    .addComponent(findCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addFirstName7)
                                    .addComponent(findCustomerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addFirstName9)
                                    .addComponent(findCustomerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addFirstName8)
                                    .addComponent(findCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(customerPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(customerPanelLayout.createSequentialGroup()
                    .addGap(351, 351, 351)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(365, Short.MAX_VALUE)))
            .addGroup(customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(customerPanelLayout.createSequentialGroup()
                    .addGap(266, 266, 266)
                    .addComponent(addCustomerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(414, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Customers", customerPanel);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1566, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 726, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Financials", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1566, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 726, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Supplies", jPanel1);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Customer records file path:");

        customerRecordsFilePathInput.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        setCustomerRecordsPathBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        setCustomerRecordsPathBtn.setText("Set");
        setCustomerRecordsPathBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setCustomerRecordsPathBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Appointment records file path:");

        AppointmentRecordsFilePathInput.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        setAppointmentRecordsFilePathBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        setAppointmentRecordsFilePathBtn.setText("Set");
        setAppointmentRecordsFilePathBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setAppointmentRecordsFilePathBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(customerRecordsFilePathInput, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                    .addComponent(AppointmentRecordsFilePathInput))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(setCustomerRecordsPathBtn)
                    .addComponent(setAppointmentRecordsFilePathBtn))
                .addContainerGap(724, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(customerRecordsFilePathInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setCustomerRecordsPathBtn))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(AppointmentRecordsFilePathInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(setAppointmentRecordsFilePathBtn))
                .addContainerGap(609, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Settings", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void findAppointmentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findAppointmentIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findAppointmentIDActionPerformed

    private void findAppointmentCustomerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findAppointmentCustomerIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findAppointmentCustomerIDActionPerformed

    private void findAppointmentRevenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findAppointmentRevenueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findAppointmentRevenueActionPerformed

    private void findAppointmentDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findAppointmentDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findAppointmentDateActionPerformed

    private void recordRevenueInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordRevenueInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recordRevenueInputActionPerformed

    private void recordDateInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordDateInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recordDateInputActionPerformed

    private void addCustomerFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCustomerFirstNameActionPerformed

    private void addCustomerPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCustomerPhoneActionPerformed

    private void addCustomerLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCustomerLastNameActionPerformed

    private void addCustomerEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCustomerEmailActionPerformed

    private void findCustomerFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findCustomerFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findCustomerFirstNameActionPerformed

    private void findCustomerPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findCustomerPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findCustomerPhoneActionPerformed

    private void findCustomerLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findCustomerLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findCustomerLastNameActionPerformed

    private void findCustomerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findCustomerIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findCustomerIDActionPerformed

    private void findCustomerEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findCustomerEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findCustomerEmailActionPerformed

    private void findCustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findCustomerBtnActionPerformed
        
        //clear the output first
        findCustomerOutput.setText("");
        
        //get the inputs in all the fields
        String firstName = findCustomerFirstName.getText();
        String lastName = findCustomerLastName.getText();
        String phone = findCustomerPhone.getText();
        String email = findCustomerEmail.getText();
        int id;
        
        try{
            id = Integer.parseInt(findCustomerID.getText());
        }catch(NumberFormatException e) {
            id = -1;
        }
        
        //array list to store the found customers
        ArrayList<Customer> foundRecords = new ArrayList<Customer>();
        
        if(id != -1) {
            foundRecords.add(customerRecords.searchID(id));
        } else if(!firstName.equals("")){
            foundRecords.addAll(customerRecords.searchFirstName(firstName));
        } else if(!lastName.equals("")) {
            foundRecords.addAll(customerRecords.searchLastName(lastName));
        } else if(!phone.equals("")) {
            foundRecords.addAll(customerRecords.searchPhoneNumber(phone));
        } else if(!email.equals("")) {
            foundRecords.addAll(customerRecords.searchEmail(email));
        } else {
            findCustomerOutput.setText("PLEASE ENTER A SEARCH INPUT!\n");
        }
        
        System.out.println(foundRecords);
        
        //print the records in the output text area
        if(foundRecords.isEmpty()) {
            findCustomerOutput.setText("NO RECORDS WERE FOUND!");
        } else {
            for(int i = 0; i < foundRecords.size(); i++) {
                findCustomerOutput.append(foundRecords.get(i).toString() + "\n");
            }
        }
        
    }//GEN-LAST:event_findCustomerBtnActionPerformed

    private void finishRecordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishRecordBtnActionPerformed
        
        //get values from inputs
        
        //get selected customer
        ComboItem chosenCustomer = (ComboItem)customerChooser.getSelectedItem();
        int customerID = chosenCustomer.getValue();
        
        //get other appointment paramaters
        String appointmentType = (String)recordTypeChooser.getSelectedItem();
        String date = recordDateInput.getText();
        double revenue = Double.parseDouble(recordRevenueInput.getText());
        
        //create new appointment record
        Appointment newAppointment = new Appointment(1, customerID, appointmentType, date, revenue);
        appointmentRecords.addAppointment(newAppointment);
        
        //update the current usable ID
        appointmentIDOutput.setText(appointmentRecords.getMaxID() + "");
        
        //clear all input fields
        recordDateInput.setText("");
        recordRevenueInput.setText("");
        
        //FOR NOW JUST DISPLAY IN OUTPUT
        findAppointmentOutput.setText(newAppointment.toString());
        
        //FOR NOW JUST UPDATE FILE
        FileWrite.writeAppointmentsToFile(appointmentRecords.toArrayList(), "");
    }//GEN-LAST:event_finishRecordBtnActionPerformed

    private void addCustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerBtnActionPerformed
        //get values from input fields (use a placeholder for ID for now!!!)
        String firstName = addCustomerFirstName.getText();
        String lastName = addCustomerLastName.getText();
        String phoneNumber = addCustomerPhone.getText();
        String email = addCustomerEmail.getText();
        
        //create new customer object and give 
        Customer newCustomer = new Customer(1, firstName, lastName, phoneNumber, email);
        customerRecords.addCustomer(newCustomer);
        
        //update the current usable ID
        customerIDOutput.setText(customerRecords.getMaxID() + "");
        
        //clear inputs
        addCustomerFirstName.setText("");
        addCustomerLastName.setText("");
        addCustomerPhone.setText("");
        addCustomerEmail.setText("");
        
        //FOR NOW!!! OUTPUT TO STRING IN TEXT AREA ON THE PANEL
        findCustomerOutput.setText(newCustomer.toString());
        
        //FOR NOW, JUST AUTOMATICALLY SAVE ALL CUSTOMERS
        FileWrite.writeCustomersToFile(customerRecords.toArrayList(), "");
        
        //update customer chooser combobox on appointments page
        updateCustomerChooser();
    }//GEN-LAST:event_addCustomerBtnActionPerformed

    private void findAppointmentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findAppointmentBtnActionPerformed
        
        //clear the output first
        findAppointmentOutput.setText("");
        
        //get the inputs in all the fields
        String appointmentType = (String)findTypeChooser.getSelectedItem();
        String date = findAppointmentDate.getText();
        int id;
        int customerID;
        double revenue;
        
        try{
            id = Integer.parseInt(findAppointmentID.getText());
        }catch(NumberFormatException e) {
            id = -1;
        }
        
        try{
            customerID = Integer.parseInt(findAppointmentCustomerID.getText());
        } catch(NumberFormatException e) {
            customerID = -1;
        }
        
        try{
            revenue = Double.parseDouble(findAppointmentRevenue.getText());
        } catch(NumberFormatException e) {
            revenue = -1.0;
        }

        //array list to store the found customers
        ArrayList<Appointment> foundRecords = new ArrayList<Appointment>();
        
        if(id != -1) {
            foundRecords.add(appointmentRecords.searchID(id));
        } else if(customerID != -1){
            foundRecords.addAll(appointmentRecords.searchCustomerID(customerID));
        } else if(revenue != -1.0) {
            foundRecords.addAll(appointmentRecords.searchRevenue(revenue));
        } else if(!date.equals("")) {
            foundRecords.addAll(appointmentRecords.searchCompletionDate(date));
        }else if(!appointmentType.equals("")) {
            foundRecords.addAll(appointmentRecords.searchType(appointmentType));
        } else {
            findAppointmentOutput.setText("PLEASE ENTER A SEARCH INPUT!\n");
        }
        
        System.out.println(foundRecords);
        
        //print the records in the output text area
        if(foundRecords.isEmpty()) {
            findAppointmentOutput.setText("NO RECORDS WERE FOUND!");
        } else {
            for(int i = 0; i < foundRecords.size(); i++) {
                findAppointmentOutput.append(foundRecords.get(i).toString() + "\n");
            }
        }
        
    }//GEN-LAST:event_findAppointmentBtnActionPerformed

    private void setCustomerRecordsPathBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setCustomerRecordsPathBtnActionPerformed
        //get filepath from input
        String newFilePath = customerRecordsFilePathInput.getText();
        
        FileRead.setCustomerRecordsPath(newFilePath);
        FileWrite.setCustomerRecordsPath(newFilePath);
        
        updateInUseRecords();

    }//GEN-LAST:event_setCustomerRecordsPathBtnActionPerformed

    private void setAppointmentRecordsFilePathBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setAppointmentRecordsFilePathBtnActionPerformed
        //get filepath from input
        String newFilePath = AppointmentRecordsFilePathInput.getText();
        
        FileRead.setAppointmentRecordsPath(newFilePath);
        FileWrite.setAppointmentRecordsPath(newFilePath);
        
        updateInUseRecords();

    }//GEN-LAST:event_setAppointmentRecordsFilePathBtnActionPerformed

    private void updateInUseRecords() {
        customerList = FileRead.readCustomers("hello");
        appointmentList = FileRead.readAppointments("hello");
        customerRecords = new CustomerRecords(customerList);
        appointmentRecords = new AppointmentRecords(appointmentList);
    }
    
    //update the customer combobox with a list of customer objects
    private void updateCustomerChooser() {
        customerChooser.removeAllItems();
        ArrayList<Customer> customers = customerRecords.toArrayList();
        
        //add existing customers to combobox in appointment records page
        for(int i = 0; i < customers.size(); i++) {
            //get first name, last name, and ID
            String firstName = customers.get(i).getFirstName();
            String lastName = customers.get(i).getLastName();
            String fullName = firstName + " " + lastName;
            int ID = customers.get(i).getID();
            
            //create new customer chooser object
            ComboItem newItem = new ComboItem(fullName, ID);
            
            customerChooser.addItem(newItem);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AppointmentRecordsFilePathInput;
    private javax.swing.JButton addCustomerBtn;
    private javax.swing.JTextField addCustomerEmail;
    private javax.swing.JTextField addCustomerFirstName;
    private javax.swing.JLabel addCustomerLabel;
    private javax.swing.JLabel addCustomerLabel1;
    private javax.swing.JTextField addCustomerLastName;
    private javax.swing.JTextField addCustomerPhone;
    private javax.swing.JLabel addFirstName;
    private javax.swing.JLabel addFirstName1;
    private javax.swing.JLabel addFirstName2;
    private javax.swing.JLabel addFirstName3;
    private javax.swing.JLabel addFirstName4;
    private javax.swing.JLabel addFirstName5;
    private javax.swing.JLabel addFirstName6;
    private javax.swing.JLabel addFirstName7;
    private javax.swing.JLabel addFirstName8;
    private javax.swing.JLabel addFirstName9;
    private javax.swing.JLabel addFirstNameLabel;
    private javax.swing.JLabel addFirstNameLabel1;
    private javax.swing.JLabel addFirstNameLabel3;
    private javax.swing.JLabel addLastNameLabel1;
    private javax.swing.JLabel addLastNameLabel2;
    private javax.swing.JLabel appointmentIDOutput;
    private javax.swing.JPanel appointmentPanel;
    private javax.swing.JComboBox<ComboItem> customerChooser;
    private javax.swing.JLabel customerIDOutput;
    private javax.swing.JPanel customerPanel;
    private javax.swing.JTextField customerRecordsFilePathInput;
    private javax.swing.JButton findAppointmentBtn;
    private javax.swing.JTextField findAppointmentCustomerID;
    private javax.swing.JTextField findAppointmentDate;
    private javax.swing.JTextField findAppointmentID;
    private javax.swing.JLabel findAppointmentLabel;
    private javax.swing.JTextArea findAppointmentOutput;
    private javax.swing.JTextField findAppointmentRevenue;
    private javax.swing.JButton findCustomerBtn;
    private javax.swing.JTextField findCustomerEmail;
    private javax.swing.JTextField findCustomerFirstName;
    private javax.swing.JTextField findCustomerID;
    private javax.swing.JTextField findCustomerLastName;
    private javax.swing.JTextArea findCustomerOutput;
    private javax.swing.JTextField findCustomerPhone;
    private javax.swing.JLabel findDateLabel;
    private javax.swing.JLabel findFirstNameLabel4;
    private javax.swing.JLabel findIDLabel;
    private javax.swing.JLabel findLastNameLabel;
    private javax.swing.JComboBox<String> findTypeChooser;
    private javax.swing.JLabel findTypeLabel;
    private javax.swing.JButton finishRecordBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel recordAppointmentLabel;
    private javax.swing.JTextField recordDateInput;
    private javax.swing.JTextField recordRevenueInput;
    private javax.swing.JComboBox<String> recordTypeChooser;
    private javax.swing.JButton setAppointmentRecordsFilePathBtn;
    private javax.swing.JButton setCustomerRecordsPathBtn;
    // End of variables declaration//GEN-END:variables
}
